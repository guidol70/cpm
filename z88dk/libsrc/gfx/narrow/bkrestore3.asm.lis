/tmp/tmpXXt3G3SE.asm:
     1                          MODULE bkrestore3_asm
     2                          LINE 0, "bkrestore3.asm"
bkrestore3.asm:
                                
     1                          ;
     2                          ;    Fast background save
     3                          ;
     4                          ;    Generic version (just a bit slow)
     5                          ;
     6                          ;    $Id: bkrestore3.asm $
     7                          ;
     8                          
     9                          IF !__CPU_INTEL__ & !__CPU_GBZ80__
    10                              SECTION   code_clib
    11                          
    12                              PUBLIC    bkrestore
    13                              PUBLIC    _bkrestore
    14                          
    15                              EXTERN    plotpixel
    16                              EXTERN    respixel
    17                          
    18                          
    19                          
    20                          .bkrestore
    21                          ._bkrestore
    22                          
    23                              ; __FASTCALL__ !!   HL = sprite address
    24                          
    25                              push ix
    26                          
    27                              inc hl    ; skip first X xs
    28                              inc hl    ; skip first Y ys
    29                          
    30                              ld    d,(hl)    ; x pos
    31                              inc hl
    32                              ld    e,(hl)    ; Y pos
    33                              inc hl
    34                          
    35                              push   hl    ; sprite addr
    36                              pop    ix
    37                          
    38                          ;    ld    h,a    ; X
    39                          ;    ld    l,e    ; Y
    40                          
    41                              ld    h,d
    42                              ld    l,e
    43                          
    44                              ld    a,(ix+0)    ; Width
    45                              ld    b,(ix+1)    ; Height
    46                          .oloopx    push    bc    ;Save # of rows
    47                              push    af
    48                          
    49                              ;ld    b,a    ;Load width
    50                              ld    b,0    ; Better, start from zero !!
    51                          
    52                              ld    c,(ix+2)    ;Load one line of image
    53                          
    54                          .iloopx    ;sla    c    ;Test leftmost pixel
    55                              ;jr    nc,noplotx    ;See if a plot is needed
    56                          
    57                              push    hl
    58                              ;push    bc    ; this should be done by the called routine
    59                              push    de
    60                              ld    a,h
    61                              add    a,b
    62                              ld    h,a
    63                              sla    c    ;Test leftmost pixel
    64                              push af
    65                              call    nc, respixel
    66                              pop af
    67                              call    c,plotpixel
    68                              pop    de
    69                              ;pop    bc
    70                              pop    hl
    71                          
    72                          ;.noplotx
    73                          
    74                              inc    b    ; witdh counter
    75                          
    76                              pop    af
    77                              push    af
    78                          
    79                              cp    b    ; end of row ?
    80                          
    81                              jr    nz,noblkx
    82                          
    83                              inc    ix
    84                              ld    c,(ix+2)    ;Load next byte of image
    85                          
    86                              jr noblockx
    87                          
    88                          .noblkx
    89                          
    90                              ld    a,b    ; next byte in row ?
    91                              ;dec    a
    92                              and    a
    93                              jr    z,iloopx
    94                              and    7
    95                          
    96                              jr    nz,iloopx
    97                          
    98                          .blockx
    99                              inc    ix
   100                              ld    c,(ix+2)    ;Load next byte of image
   101                              jr    iloopx
   102                          
   103                          .noblockx
   104                          
   105                              inc    l
   106                          
   107                              pop    af
   108                              pop    bc    ;Restore data
   109                              djnz    oloopx
   110                          
   111                              pop ix
   112                              ret
   113                          
   114                          
   115                          ENDIF
   116                          
