;* * * * *  Small-C/Plus z88dk * * * * *
;  Version: 20789-c163a5749-20230406
;
;	Reconstructed for z80 Module Assembler
;
;	Module compile time: Thu Apr  6 17:50:59 2023


	C_LINE	0,"long_addition_opts.c"

	MODULE	long_addition_opts_c


	INCLUDE "z80_crt0.hdr"


	C_LINE	2,"long_addition_opts.c"
	SECTION	code_compiler

; Function func flags 0x00000200 __smallc 
; void func(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	3,"long_addition_opts.c::func::0::0"
._func
	ld	hl,2	;const
	add	hl,sp
	push	hl
	call	l_glong
	call	l_inclong
	pop	bc
	call	l_plong
	ret


	C_LINE	7,"long_addition_opts.c::func::0::1"

; Function func2 flags 0x00000200 __smallc 
; void func2(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	8,"long_addition_opts.c::func2::0::1"
._func2
	ld	hl,2	;const
	add	hl,sp
	push	hl
	call	l_glong
	ld	bc,2
	add	hl,bc
	jr	nc,ASMPC+3
	inc	de
	pop	bc
	call	l_plong
	ret


	C_LINE	12,"long_addition_opts.c::func2::0::2"

; Function func3 flags 0x00000200 __smallc 
; void func3(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	13,"long_addition_opts.c::func3::0::2"
._func3
	ld	hl,2	;const
	add	hl,sp
	push	hl
	call	l_glong
	ld	bc,3
	add	hl,bc
	jr	nc,ASMPC+3
	inc	de
	pop	bc
	call	l_plong
	ret


	C_LINE	17,"long_addition_opts.c::func3::0::3"

; Function func4 flags 0x00000200 __smallc 
; void func4(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	18,"long_addition_opts.c::func4::0::3"
._func4
	ld	hl,2	;const
	add	hl,sp
	push	hl
	call	l_glong
	ld	bc,4
	add	hl,bc
	jr	nc,ASMPC+3
	inc	de
	pop	bc
	call	l_plong
	ret


	C_LINE	22,"long_addition_opts.c::func4::0::4"

; Function funcx flags 0x00000200 __smallc 
; void funcx(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	23,"long_addition_opts.c::funcx::0::4"
._funcx
	ld	hl,2	;const
	add	hl,sp
	push	hl
	call	l_glong
	ld	bc,10
	add	hl,bc
	jr	nc,ASMPC+3
	inc	de
	pop	bc
	call	l_plong
	ret


	C_LINE	27,"long_addition_opts.c::funcx::0::5"

; Function func65536 flags 0x00000200 __smallc 
; void func65536(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	28,"long_addition_opts.c::func65536::0::5"
._func65536
	ld	hl,2	;const
	add	hl,sp
	push	hl
	call	l_glong
	inc	de
	pop	bc
	call	l_plong
	ret


	C_LINE	32,"long_addition_opts.c::func65536::0::6"

; Function func65536_2 flags 0x00000200 __smallc 
; void func65536_2(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	33,"long_addition_opts.c::func65536_2::0::6"
._func65536_2
	ld	hl,2	;const
	add	hl,sp
	push	hl
	call	l_glong
	inc	de
	inc	de
	pop	bc
	call	l_plong
	ret


	C_LINE	36,"long_addition_opts.c::func65536_2::0::7"

; Function func65536_3 flags 0x00000200 __smallc 
; void func65536_3(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	37,"long_addition_opts.c::func65536_3::0::7"
._func65536_3
	ld	hl,2	;const
	add	hl,sp
	push	hl
	call	l_glong
	inc	de
	inc	de
	inc	de
	pop	bc
	call	l_plong
	ret


	C_LINE	40,"long_addition_opts.c::func65536_3::0::8"

; Function func65536_4 flags 0x00000200 __smallc 
; void func65536_4(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	41,"long_addition_opts.c::func65536_4::0::8"
._func65536_4
	ld	hl,2	;const
	add	hl,sp
	push	hl
	call	l_glong
	inc	de
	inc	de
	inc	de
	inc	de
	pop	bc
	call	l_plong
	ret


	C_LINE	44,"long_addition_opts.c::func65536_4::0::9"

; Function func65536_x flags 0x00000200 __smallc 
; void func65536_x(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	45,"long_addition_opts.c::func65536_x::0::9"
._func65536_x
	ld	hl,2	;const
	add	hl,sp
	push	hl
	call	l_glong
	ex	de,hl
	ld	bc,10
	add	hl,bc
	ex	de,hl
	pop	bc
	call	l_plong
	ret


	C_LINE	49,"long_addition_opts.c::func65536_x::0::10"

; Function func65537 flags 0x00000200 __smallc 
; void func65537(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	50,"long_addition_opts.c::func65537::0::10"
._func65537
	ld	hl,2	;const
	add	hl,sp
	push	hl
	call	l_glong
	ld	bc,1
	add	hl,bc
	jr	nc,ASMPC+3
	inc	de
	inc	de
	pop	bc
	call	l_plong
	ret


	C_LINE	55,"long_addition_opts.c::func65537::0::11"

; Function funcm1 flags 0x00000200 __smallc 
; void funcm1(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	56,"long_addition_opts.c::funcm1::0::11"
._funcm1
	ld	hl,2	;const
	add	hl,sp
	push	hl
	call	l_glong
	call	l_declong
	pop	bc
	call	l_plong
	ret


	C_LINE	60,"long_addition_opts.c::funcm1::0::12"

; Function funcm2 flags 0x00000200 __smallc 
; void funcm2(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	61,"long_addition_opts.c::funcm2::0::12"
._funcm2
	ld	hl,2	;const
	add	hl,sp
	push	hl
	call	l_glong
	ld	bc,65534
	add	hl,bc
	jr	c,ASMPC+3
	dec	de
	pop	bc
	call	l_plong
	ret


	C_LINE	65,"long_addition_opts.c::funcm2::0::13"

; Function funcm3 flags 0x00000200 __smallc 
; void funcm3(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	66,"long_addition_opts.c::funcm3::0::13"
._funcm3
	ld	hl,2	;const
	add	hl,sp
	push	hl
	call	l_glong
	ld	bc,65533
	add	hl,bc
	jr	c,ASMPC+3
	dec	de
	pop	bc
	call	l_plong
	ret


	C_LINE	70,"long_addition_opts.c::funcm3::0::14"

; Function funcm4 flags 0x00000200 __smallc 
; void funcm4(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	71,"long_addition_opts.c::funcm4::0::14"
._funcm4
	ld	hl,2	;const
	add	hl,sp
	push	hl
	call	l_glong
	ld	bc,65532
	add	hl,bc
	jr	c,ASMPC+3
	dec	de
	pop	bc
	call	l_plong
	ret


	C_LINE	75,"long_addition_opts.c::funcm4::0::15"

; Function funcmx flags 0x00000200 __smallc 
; void funcmx(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	76,"long_addition_opts.c::funcmx::0::15"
._funcmx
	ld	hl,2	;const
	add	hl,sp
	push	hl
	call	l_glong
	ld	bc,65526
	add	hl,bc
	jr	c,ASMPC+3
	dec	de
	pop	bc
	call	l_plong
	ret


	C_LINE	79,"long_addition_opts.c::funcmx::0::16"

; Function funcm65536 flags 0x00000200 __smallc 
; void funcm65536(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	80,"long_addition_opts.c::funcm65536::0::16"
._funcm65536
	ld	hl,2	;const
	add	hl,sp
	push	hl
	call	l_glong
	dec	de
	pop	bc
	call	l_plong
	ret


	C_LINE	84,"long_addition_opts.c::funcm65536::0::17"

; Function funcm65536_2 flags 0x00000200 __smallc 
; void funcm65536_2(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	85,"long_addition_opts.c::funcm65536_2::0::17"
._funcm65536_2
	ld	hl,2	;const
	add	hl,sp
	push	hl
	call	l_glong
	dec	de
	dec	de
	pop	bc
	call	l_plong
	ret


	C_LINE	88,"long_addition_opts.c::funcm65536_2::0::18"

; Function funcm65536_3 flags 0x00000200 __smallc 
; void funcm65536_3(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	89,"long_addition_opts.c::funcm65536_3::0::18"
._funcm65536_3
	ld	hl,2	;const
	add	hl,sp
	push	hl
	call	l_glong
	dec	de
	dec	de
	dec	de
	pop	bc
	call	l_plong
	ret


	C_LINE	92,"long_addition_opts.c::funcm65536_3::0::19"

; Function funcm65536_4 flags 0x00000200 __smallc 
; void funcm65536_4(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	93,"long_addition_opts.c::funcm65536_4::0::19"
._funcm65536_4
	ld	hl,2	;const
	add	hl,sp
	push	hl
	call	l_glong
	dec	de
	dec	de
	dec	de
	dec	de
	pop	bc
	call	l_plong
	ret


	C_LINE	96,"long_addition_opts.c::funcm65536_4::0::20"

; Function funcm65536_x flags 0x00000200 __smallc 
; void funcm65536_x(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	97,"long_addition_opts.c::funcm65536_x::0::20"
._funcm65536_x
	ld	hl,2	;const
	add	hl,sp
	push	hl
	call	l_glong
	ex	de,hl
	ld	bc,65526
	add	hl,bc
	ex	de,hl
	pop	bc
	call	l_plong
	ret


; --- Start of Optimiser additions ---


; --- Start of Static Variables ---

	SECTION	bss_compiler
	SECTION	code_compiler


; --- Start of Scope Defns ---

	GLOBAL	_func
	GLOBAL	_func2
	GLOBAL	_func3
	GLOBAL	_func4
	GLOBAL	_funcx
	GLOBAL	_func65536
	GLOBAL	_func65536_2
	GLOBAL	_func65536_3
	GLOBAL	_func65536_4
	GLOBAL	_func65536_x
	GLOBAL	_func65537
	GLOBAL	_funcm1
	GLOBAL	_funcm2
	GLOBAL	_funcm3
	GLOBAL	_funcm4
	GLOBAL	_funcmx
	GLOBAL	_funcm65536
	GLOBAL	_funcm65536_2
	GLOBAL	_funcm65536_3
	GLOBAL	_funcm65536_4
	GLOBAL	_funcm65536_x


; --- End of Scope Defns ---


; --- End of Compilation ---
