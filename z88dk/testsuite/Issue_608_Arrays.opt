;* * * * *  Small-C/Plus z88dk * * * * *
;  Version: 20789-c163a5749-20230406
;
;	Reconstructed for z80 Module Assembler
;
;	Module compile time: Thu Apr  6 17:50:56 2023


	C_LINE	0,"Issue_608_Arrays.c"

	MODULE	Issue_608_Arrays_c


	INCLUDE "z80_crt0.hdr"


	C_LINE	3,"Issue_608_Arrays.c"
	SECTION	data_compiler
._carray
	defm	"HelloThere"
	defb	0

	SECTION	code_compiler
	C_LINE	4,"Issue_608_Arrays.c"
	SECTION	data_compiler
._larray
	defb	1,0,0,0
	defb	2,0,0,0
	defb	3,0,0,0
	SECTION	code_compiler
	C_LINE	6,"Issue_608_Arrays.c"
	SECTION	data_compiler
._larrays
	defb	1,0,0,0
	defb	2,0,0,0
	defs	4
	SECTION	code_compiler
	C_LINE	8,"Issue_608_Arrays.c"
	SECTION	data_compiler
._narray
	defw	1
	defw	2
	defs	2
	defw	3
	defw	4
	defs	2
	SECTION	code_compiler
	C_LINE	13,"Issue_608_Arrays.c"

; Function func flags 0x00000200 __smallc 
; int func(int i)
; parameter 'int i' at sp+2 size(2)
	C_LINE	13,"Issue_608_Arrays.c::func::0::0"
._func
	ld	hl,_carray
	push	hl
	call	l_gint4sp	;
	pop	de
	add	hl,de
	call	l_gchar
	ret


	C_LINE	17,"Issue_608_Arrays.c::func::0::1"

; Function func2 flags 0x00000200 __smallc 
; int func2(int i)
; parameter 'int i' at sp+2 size(2)
	C_LINE	17,"Issue_608_Arrays.c::func2::0::1"
._func2
	ld	hl,_larray
	push	hl
	call	l_gint4sp	;
	add	hl,hl
	add	hl,hl
	pop	de
	add	hl,de
	call	l_glong
	ret


	C_LINE	21,"Issue_608_Arrays.c::func2::0::2"

; Function func2_b flags 0x00000200 __smallc 
; int func2_b(int i)
; parameter 'int i' at sp+2 size(2)
	C_LINE	21,"Issue_608_Arrays.c::func2_b::0::2"
._func2_b
	ld	hl,_larrays
	push	hl
	call	l_gint4sp	;
	add	hl,hl
	add	hl,hl
	pop	de
	add	hl,de
	call	l_glong
	ret


	C_LINE	25,"Issue_608_Arrays.c::func2_b::0::3"

; Function func3 flags 0x00000200 __smallc 
; int func3(int i)
; parameter 'int i' at sp+2 size(2)
	C_LINE	25,"Issue_608_Arrays.c::func3::0::3"
._func3
	ld	hl,_narray
	push	hl
	call	l_gint4sp	;
	ld	b,h
	ld	c,l
	add	hl,bc
	add	hl,bc
	add	hl,hl
	pop	de
	add	hl,de
	call	l_gint2	;
	ret


; --- Start of Optimiser additions ---


; --- Start of Static Variables ---

	SECTION	bss_compiler
	SECTION	code_compiler


; --- Start of Scope Defns ---

	GLOBAL	_carray
	GLOBAL	_larray
	GLOBAL	_larrays
	GLOBAL	_narray
	GLOBAL	_func
	GLOBAL	_func2
	GLOBAL	_func2_b
	GLOBAL	_func3


; --- End of Scope Defns ---


; --- End of Compilation ---
