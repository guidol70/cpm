;* * * * *  Small-C/Plus z88dk * * * * *
;  Version: 20789-c163a5749-20230406
;
;	Reconstructed for z80 Module Assembler
;
;	Module compile time: Thu Apr  6 17:50:59 2023


	C_LINE	0,"Issue_98_underlying.c"

	MODULE	Issue_98_underlying_c


	INCLUDE "z80_crt0.hdr"


	C_LINE	1,"Issue_98_underlying.c"
	C_LINE	2,"Issue_98_underlying.c"
	C_LINE	4,"Issue_98_underlying.c"
	SECTION	code_compiler

; Function mul flags 0x00000200 __smallc 
; long mul(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	5,"Issue_98_underlying.c::mul::0::0"
._mul
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	add	hl,hl
	rl	e
	rl	d
	ret


	C_LINE	8,"Issue_98_underlying.c::mul::0::1"

; Function muli flags 0x00000200 __smallc 
; int muli(int l)
; parameter 'int l' at sp+2 size(2)
	C_LINE	9,"Issue_98_underlying.c::muli::0::1"
._muli
	pop	bc
	pop	hl
	push	hl
	push	bc
	add	hl,hl
	ret


	C_LINE	12,"Issue_98_underlying.c::muli::0::2"

; Function muli2 flags 0x00000200 __smallc 
; long muli2(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	13,"Issue_98_underlying.c::muli2::0::2"
._muli2
	ld	hl,(_k)
	push	hl
	ld	hl,4	;const
	add	hl,sp
	call	l_glong
	exx
	pop	hl
	call	l_int2long_s
	push	de
	push	hl
	exx
	call	l_long_mult
	ret


	C_LINE	16,"Issue_98_underlying.c::muli2::0::3"

; Function mul_assign_to_int flags 0x00000200 __smallc 
; int mul_assign_to_int(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	17,"Issue_98_underlying.c::mul_assign_to_int::0::3"
._mul_assign_to_int
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	add	hl,hl
	rl	e
	rl	d
	ret


	C_LINE	22,"Issue_98_underlying.c::mul_assign_to_int::0::4"

; Function mul2 flags 0x00000200 __smallc 
; long mul2(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	23,"Issue_98_underlying.c::mul2::0::4"
._mul2
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	add	hl,hl
	rl	e
	rl	d
	ret


	C_LINE	27,"Issue_98_underlying.c::mul2::0::5"

; Function div flags 0x00000200 __smallc 
; long div(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	28,"Issue_98_underlying.c::div::0::5"
._div
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	ld	bc,0
	push	bc
	ld	bc,2
	push	bc
	call	l_long_div
	ret


	C_LINE	31,"Issue_98_underlying.c::div::0::6"

; Function div2 flags 0x00000200 __smallc 
; long div2(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	32,"Issue_98_underlying.c::div2::0::6"
._div2
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	bit	7,d
	jr	z,i_2
	call	l_inclong
.i_2
	sra	d
	rr	e
	rr	h
	rr	l
	ret


	C_LINE	35,"Issue_98_underlying.c::div2::0::7"

; Function div3 flags 0x00000200 __smallc 
; long div3(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	36,"Issue_98_underlying.c::div3::0::7"
._div3
	ld	hl,(_g)
	ld	de,(_g+2)
	push	de
	push	hl
	ld	hl,6	;const
	add	hl,sp
	call	l_glong
	call	l_long_div
	ret


	C_LINE	40,"Issue_98_underlying.c::div3::0::8"

; Function add flags 0x00000200 __smallc 
; long add(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	41,"Issue_98_underlying.c::add::0::8"
._add
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	ld	bc,2
	add	hl,bc
	jr	nc,ASMPC+3
	inc	de
	ret


	C_LINE	44,"Issue_98_underlying.c::add::0::9"

; Function add2 flags 0x00000200 __smallc 
; long add2(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	45,"Issue_98_underlying.c::add2::0::9"
._add2
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	ld	bc,2
	add	hl,bc
	jr	nc,ASMPC+3
	inc	de
	ret


	C_LINE	49,"Issue_98_underlying.c::add2::0::10"

; Function sub flags 0x00000200 __smallc 
; long sub(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	50,"Issue_98_underlying.c::sub::0::10"
._sub
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	ld	bc,0
	push	bc
	ld	bc,2
	push	bc
	call	l_long_sub
	ret


	C_LINE	53,"Issue_98_underlying.c::sub::0::11"

; Function sub_1 flags 0x00000200 __smallc 
; long sub_1(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	54,"Issue_98_underlying.c::sub_1::0::11"
._sub_1
	ld	hl,2	;const
	add	hl,sp
	call	l_glong2sp
	ld	hl,6	;const
	add	hl,sp
	call	l_glong
	call	l_long_mult
	ld	bc,0
	push	bc
	ld	bc,2
	push	bc
	call	l_long_sub
	ret


	C_LINE	57,"Issue_98_underlying.c::sub_1::0::12"

; Function sub2 flags 0x00000200 __smallc 
; long sub2(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	58,"Issue_98_underlying.c::sub2::0::12"
._sub2
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	ld	bc,65534
	add	hl,bc
	jr	c,ASMPC+3
	dec	de
	ret


	C_LINE	61,"Issue_98_underlying.c::sub2::0::13"

; Function sub2_1 flags 0x00000200 __smallc 
; long sub2_1(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	62,"Issue_98_underlying.c::sub2_1::0::13"
._sub2_1
	ld	hl,2	;const
	add	hl,sp
	call	l_glong2sp
	ld	hl,6	;const
	add	hl,sp
	call	l_glong
	call	l_long_mult
	ld	bc,65534
	add	hl,bc
	jr	c,ASMPC+3
	dec	de
	ret


	C_LINE	65,"Issue_98_underlying.c::sub2_1::0::14"

; Function sub3 flags 0x00000200 __smallc 
; long sub3(long l)
; parameter 'long l' at sp+2 size(4)
	C_LINE	66,"Issue_98_underlying.c::sub3::0::14"
._sub3
	ld	hl,(_g)
	ld	de,(_g+2)
	push	de
	push	hl
	ld	hl,6	;const
	add	hl,sp
	call	l_glong
	call	l_long_sub
	ret


; --- Start of Optimiser additions ---


; --- Start of Static Variables ---

	SECTION	bss_compiler
._g	defs	4
._k	defs	2
	SECTION	code_compiler


; --- Start of Scope Defns ---

	GLOBAL	_g
	GLOBAL	_k
	GLOBAL	_mul
	GLOBAL	_muli
	GLOBAL	_muli2
	GLOBAL	_mul_assign_to_int
	GLOBAL	_mul2
	GLOBAL	_div
	GLOBAL	_div2
	GLOBAL	_div3
	GLOBAL	_add
	GLOBAL	_add2
	GLOBAL	_sub
	GLOBAL	_sub_1
	GLOBAL	_sub2
	GLOBAL	_sub2_1
	GLOBAL	_sub3


; --- End of Scope Defns ---


; --- End of Compilation ---
