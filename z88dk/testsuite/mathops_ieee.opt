;* * * * *  Small-C/Plus z88dk * * * * *
;  Version: 20789-c163a5749-20230406
;
;	Reconstructed for z80 Module Assembler
;
;	Module compile time: Thu Apr  6 17:51:00 2023


	C_LINE	0,"mathops_ieee.c"

	MODULE	mathops_ieee_c


	INCLUDE "z80_crt0.hdr"


	C_LINE	2,"mathops_ieee.c"
	C_LINE	3,"mathops_ieee.c"
	C_LINE	5,"mathops_ieee.c"
	SECTION	code_compiler

; Function assign flags 0x00000200 __smallc 
; double assign()
	C_LINE	5,"mathops_ieee.c::assign::0::0"
._assign
	ld	hl,0	;const
	ld	de,16416
	push	de
	push	hl
	pop	bc
	pop	bc
	ret


	C_LINE	6,"mathops_ieee.c::assign::0::1"

; Function assign2 flags 0x00000200 __smallc 
; double assign2()
	C_LINE	6,"mathops_ieee.c::assign2::0::1"
._assign2
	push	bc
	push	bc
	ld	hl,0	;const
	add	hl,sp
	xor	a
	ld	(hl),a
	inc	hl
	ld	(hl),a
	inc	hl
	ld	(hl),32
	inc	hl
	ld	(hl),64
	ld	hl,0	;const
	add	hl,sp
	call	l_glong
	push	de
	push	hl
	call	_func
	pop	bc
	pop	bc
	ld	hl,0	;const
	add	hl,sp
	call	l_glong
	pop	bc
	pop	bc
	ret


	C_LINE	7,"mathops_ieee.c::assign2::0::2"

; Function assign_via_pointer flags 0x00000200 __smallc 
; double assign_via_pointer(double * a)
; parameter 'double * a' at sp+2 size(2)
	C_LINE	7,"mathops_ieee.c::assign_via_pointer::0::2"
._assign_via_pointer
	ld	hl,2	;const
	call	l_gintspsp	;
	ld	hl,0	;const
	ld	de,16672
	pop	bc
	call	l_plong
	ret


	C_LINE	8,"mathops_ieee.c::assign_via_pointer::0::3"

; Function funccall flags 0x00000200 __smallc 
; double funccall(double a)
; parameter 'double a' at sp+2 size(4)
	C_LINE	8,"mathops_ieee.c::funccall::0::3"
._funccall
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	push	de
	push	hl
	call	_func
	pop	bc
	pop	bc
	ret


	C_LINE	10,"mathops_ieee.c::funccall::0::4"

; Function funcptr flags 0x00000200 __smallc 
; double funcptr(double a)
; parameter 'double a' at sp+2 size(4)
	C_LINE	10,"mathops_ieee.c::funcptr::0::4"
._funcptr
	ld	hl,_func2
	push	hl
	push	hl
	ld	hl,6	;const
	add	hl,sp
	call	l_glong
	ex	de,hl
	ex	(sp),hl
	push	de
	push	hl
	ld	hl,0	;const
	ld	de,16256
	ex	de,hl
	ex	(sp),hl
	push	de
	call	l_jphl
	pop	bc
	pop	bc
	pop	bc
	pop	bc
	pop	bc
	ret


	C_LINE	16,"mathops_ieee.c::funcptr::0::5"

; Function add flags 0x00000200 __smallc 
; double add(double a, double b)
; parameter 'double b' at sp+2 size(4)
; parameter 'double a' at sp+6 size(4)
	C_LINE	16,"mathops_ieee.c::add::0::5"
._add
	ld	hl,6	;const
	add	hl,sp
	call	l_glong2sp
	ld	hl,6	;const
	add	hl,sp
	call	l_glong
	call	l_f32_add
	ret


	C_LINE	17,"mathops_ieee.c::add::0::6"

; Function sub flags 0x00000200 __smallc 
; double sub(double a, double b)
; parameter 'double b' at sp+2 size(4)
; parameter 'double a' at sp+6 size(4)
	C_LINE	17,"mathops_ieee.c::sub::0::6"
._sub
	ld	hl,6	;const
	add	hl,sp
	call	l_glong2sp
	ld	hl,6	;const
	add	hl,sp
	call	l_glong
	call	l_f32_sub
	ret


	C_LINE	18,"mathops_ieee.c::sub::0::7"

; Function mul flags 0x00000200 __smallc 
; double mul(double a, double b)
; parameter 'double b' at sp+2 size(4)
; parameter 'double a' at sp+6 size(4)
	C_LINE	18,"mathops_ieee.c::mul::0::7"
._mul
	ld	hl,6	;const
	add	hl,sp
	call	l_glong2sp
	ld	hl,6	;const
	add	hl,sp
	call	l_glong
	call	l_f32_mul
	ret


	C_LINE	19,"mathops_ieee.c::mul::0::8"

; Function div flags 0x00000200 __smallc 
; double div(double a, double b)
; parameter 'double b' at sp+2 size(4)
; parameter 'double a' at sp+6 size(4)
	C_LINE	19,"mathops_ieee.c::div::0::8"
._div
	ld	hl,6	;const
	add	hl,sp
	call	l_glong2sp
	ld	hl,6	;const
	add	hl,sp
	call	l_glong
	call	l_f32_div
	ret


	C_LINE	21,"mathops_ieee.c::div::0::9"

; Function eq flags 0x00000200 __smallc 
; int eq(double a, double b)
; parameter 'double b' at sp+2 size(4)
; parameter 'double a' at sp+6 size(4)
	C_LINE	21,"mathops_ieee.c::eq::0::9"
._eq
	ld	hl,6	;const
	add	hl,sp
	call	l_glong2sp
	ld	hl,6	;const
	add	hl,sp
	call	l_glong
	call	l_f32_eq
	ret


	C_LINE	22,"mathops_ieee.c::eq::0::10"

; Function ne flags 0x00000200 __smallc 
; int ne(double a, double b)
; parameter 'double b' at sp+2 size(4)
; parameter 'double a' at sp+6 size(4)
	C_LINE	22,"mathops_ieee.c::ne::0::10"
._ne
	ld	hl,6	;const
	add	hl,sp
	call	l_glong2sp
	ld	hl,6	;const
	add	hl,sp
	call	l_glong
	call	l_f32_ne
	ret


	C_LINE	23,"mathops_ieee.c::ne::0::11"

; Function lt flags 0x00000200 __smallc 
; int lt(double a, double b)
; parameter 'double b' at sp+2 size(4)
; parameter 'double a' at sp+6 size(4)
	C_LINE	23,"mathops_ieee.c::lt::0::11"
._lt
	ld	hl,6	;const
	add	hl,sp
	call	l_glong2sp
	ld	hl,6	;const
	add	hl,sp
	call	l_glong
	call	l_f32_lt
	ret


	C_LINE	24,"mathops_ieee.c::lt::0::12"

; Function le flags 0x00000200 __smallc 
; int le(double a, double b)
; parameter 'double b' at sp+2 size(4)
; parameter 'double a' at sp+6 size(4)
	C_LINE	24,"mathops_ieee.c::le::0::12"
._le
	ld	hl,6	;const
	add	hl,sp
	call	l_glong2sp
	ld	hl,6	;const
	add	hl,sp
	call	l_glong
	call	l_f32_le
	ret


	C_LINE	25,"mathops_ieee.c::le::0::13"

; Function gt flags 0x00000200 __smallc 
; int gt(double a, double b)
; parameter 'double b' at sp+2 size(4)
; parameter 'double a' at sp+6 size(4)
	C_LINE	25,"mathops_ieee.c::gt::0::13"
._gt
	ld	hl,6	;const
	add	hl,sp
	call	l_glong2sp
	ld	hl,6	;const
	add	hl,sp
	call	l_glong
	call	l_f32_gt
	ret


	C_LINE	26,"mathops_ieee.c::gt::0::14"

; Function ge flags 0x00000200 __smallc 
; int ge(double a, double b)
; parameter 'double b' at sp+2 size(4)
; parameter 'double a' at sp+6 size(4)
	C_LINE	26,"mathops_ieee.c::ge::0::14"
._ge
	ld	hl,6	;const
	add	hl,sp
	call	l_glong2sp
	ld	hl,6	;const
	add	hl,sp
	call	l_glong
	call	l_f32_ge
	ret


	C_LINE	28,"mathops_ieee.c::ge::0::15"

; Function neg flags 0x00000200 __smallc 
; double neg(double a)
; parameter 'double a' at sp+2 size(4)
	C_LINE	28,"mathops_ieee.c::neg::0::15"
._neg
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	ld	a,d
	xor	128
	ld	d,a
	ret


	C_LINE	30,"mathops_ieee.c::neg::0::16"

; Function inverse flags 0x00000200 __smallc 
; double inverse(double a)
; parameter 'double a' at sp+2 size(4)
	C_LINE	30,"mathops_ieee.c::inverse::0::16"
._inverse
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	call	l_f32_invf
	ret


	C_LINE	32,"mathops_ieee.c::inverse::0::17"

; Function cschar flags 0x00000200 __smallc 
; double cschar(char c)
; parameter 'char c' at sp+2 size(1)
	C_LINE	32,"mathops_ieee.c::cschar::0::17"
._cschar
	ld	hl,2	;const
	add	hl,sp
	call	l_gchar
	call	l_f32_schar2f
	ret


	C_LINE	33,"mathops_ieee.c::cschar::0::18"

; Function cuchar flags 0x00000200 __smallc 
; double cuchar(unsigned char c)
; parameter 'unsigned char c' at sp+2 size(1)
	C_LINE	33,"mathops_ieee.c::cuchar::0::18"
._cuchar
	ld	hl,2	;const
	add	hl,sp
	ld	l,(hl)
	ld	h,0
	call	l_f32_uchar2f
	ret


	C_LINE	34,"mathops_ieee.c::cuchar::0::19"

; Function csint flags 0x00000200 __smallc 
; double csint(int i)
; parameter 'int i' at sp+2 size(2)
	C_LINE	34,"mathops_ieee.c::csint::0::19"
._csint
	pop	bc
	pop	hl
	push	hl
	push	bc
	call	l_f32_sint2f
	ret


	C_LINE	35,"mathops_ieee.c::csint::0::20"

; Function cuint flags 0x00000200 __smallc 
; double cuint(unsigned int i)
; parameter 'unsigned int i' at sp+2 size(2)
	C_LINE	35,"mathops_ieee.c::cuint::0::20"
._cuint
	pop	bc
	pop	hl
	push	hl
	push	bc
	call	l_f32_uint2f
	ret


	C_LINE	36,"mathops_ieee.c::cuint::0::21"

; Function cslong flags 0x00000200 __smallc 
; double cslong(long i)
; parameter 'long i' at sp+2 size(4)
	C_LINE	36,"mathops_ieee.c::cslong::0::21"
._cslong
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	call	l_f32_slong2f
	ret


	C_LINE	37,"mathops_ieee.c::cslong::0::22"

; Function culong flags 0x00000200 __smallc 
; double culong(unsigned long i)
; parameter 'unsigned long i' at sp+2 size(4)
	C_LINE	37,"mathops_ieee.c::culong::0::22"
._culong
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	call	l_f32_ulong2f
	ret


; --- Start of Optimiser additions ---


; --- Start of Static Variables ---

	SECTION	bss_compiler
	SECTION	code_compiler


; --- Start of Scope Defns ---

	GLOBAL	_func
	GLOBAL	_func2
	GLOBAL	_assign
	GLOBAL	_assign2
	GLOBAL	_assign_via_pointer
	GLOBAL	_funccall
	GLOBAL	_funcptr
	GLOBAL	_add
	GLOBAL	_sub
	GLOBAL	_mul
	GLOBAL	_div
	GLOBAL	_eq
	GLOBAL	_ne
	GLOBAL	_lt
	GLOBAL	_le
	GLOBAL	_gt
	GLOBAL	_ge
	GLOBAL	_neg
	GLOBAL	_inverse
	GLOBAL	_cschar
	GLOBAL	_cuchar
	GLOBAL	_csint
	GLOBAL	_cuint
	GLOBAL	_cslong
	GLOBAL	_culong


; --- End of Scope Defns ---


; --- End of Compilation ---
